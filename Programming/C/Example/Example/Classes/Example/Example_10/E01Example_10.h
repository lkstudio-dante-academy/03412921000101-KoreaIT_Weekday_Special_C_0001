#pragma once

#include "../../Global/Define/KDefine+Global.h"

/*
* 문자열 (String) 이란?
* - 문자를 조합해서 단어 or 문장을 표현하는 자료형을 의미한다. (+ 즉, 문자열은
* char 데이터의 조합으로 만들어진다는 것을 알 수 있다.)
*
* C 은 문자열을 의미하는 별도의 자료형이 존재하지 않지만 char 배열을 이용해서 문자열을
* 표현하는 것이 가능하다.
*
* 단, char 배열이 문자열이 되기 위해서는 반드시 널 문자 (\0) 가 마지막에 추가 되어야한다. (+ 즉,
* 널 문자가 존재하지 않으면 문자열이 아닌 단순한 char 의 배열이라는 것을 알 수 있다.)
*
* Ex)
* char szStrA[] =
* {
*		'A', 'B', 'C'
* };
*
* char szStrB[] =
* {
*		'A', 'B', 'C', '\n'
* };
*
* printf("%s\n", szStrA);			<- 런타임 에러 발생
* printf("%s\n", szStrB);
*
* 위와 같이 szStrA 는 널 문자가 존재하지 않기 때문에 단순한 char 배열이라는 것을 알 수 있다. (+ 즉,
* 해당 배열을 %s 서식 문자로 출력을 시도하면 프로그램이 오작동 한다는 것을 의미한다.)
*
* 반면 szStrB 는 널 문자가 마지막에 존재하기 때문에 해당 배열은 문자열로 사용하는 것이 가능하다.
*
* C 문자열 관련 주요 함수
* - strcpy			<- 문자열 복사
* - strcat			<- 문자열 결합
* - strcmp			<- 문자열 비교
* - strlen			<- 문자열 길이 반환
*
* C 은 배열을 통해 문자열을 표현하기 때문에 문자열을 대상으로 변수처럼 연산자를 사용하는 것이
* 불가능하다.
*
* 따라서 C 은 문자열을 제어하기 위한 여러 함수를 제공하며 해당 함수들을 활용하면 좀 더
* 수월하게 문자열을 제어하는 것이 가능하다.
*/

/** Example 10 */
int E01Example_10(int argc, char* args[]);
